// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client { 
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  firstname String 
  lastname String
  email String  @unique
  phone String @unique

  address Address[]
  order Order[]
}

model Address {
  id Int @id @default(autoincrement())
  address String
  district String
  subDistrict String
  province String
  postal String
  isMain Boolean
  
  user User @relation(fields: [userId], references: [id])
  userId Int 
}

enum Status {
  PENDING
  SHIPPING
}

enum PayMethod {
  QRCODE
  CREDIT
  CASH
}

model Order {
  id Int @id @default(autoincrement())
  total String
  is_paid Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status Status @default(PENDING)
  payment_method PayMethod @default(CASH) 

  userId Int
  user User @relation(fields: [userId], references: [id])

  orderProduct OrderProduct[]
} 

model Product {
  id Int @id @default(autoincrement())
  name String
  price String
  stock String
  detail String
  length Int?
  width Int?
  height Int?
  weight Int?

  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])

  OrderProduct OrderProduct[]
}



model OrderProduct {
  id Int @id @default(autoincrement())
  quantity Int


  productId Int
  product Product @relation(fields: [productId], references: [id])
  orderId Int 
  order Order @relation(fields: [orderId], references: [id])
}

model Category {
  id Int @id @default(autoincrement())
  name String

  product Product[]
}